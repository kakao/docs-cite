<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usage-rsses on Cite Documents</title>
    <link>https://tech.kakao.com/citedocs/usage/index.xml</link>
    <description>Recent content in Usage-rsses on Cite Documents</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the Apache License 2.0</copyright>
    <lastBuildDate>Tue, 23 Aug 2016 17:27:31 +0900</lastBuildDate>
    <atom:link href="https://tech.kakao.com/citedocs/usage/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Usage</title>
      <link>https://tech.kakao.com/citedocs/usage/</link>
      <pubDate>Tue, 23 Aug 2016 17:27:31 +0900</pubDate>
      
      <guid>https://tech.kakao.com/citedocs/usage/</guid>
      <description>

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Dockerfile : 서비스 repository의 root directory에 위치.

&lt;ul&gt;
&lt;li&gt;base image는 docker-alpine(&lt;a href=&#34;http://gliderlabs.viewdocs.io/docker-alpine/&#34;&gt;http://gliderlabs.viewdocs.io/docker-alpine/&lt;/a&gt;) 권장&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;gui-cite&#34;&gt;GUI: cite&lt;/h2&gt;

&lt;h3 id=&#34;생성&#34;&gt;생성&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;cite web(&lt;a href=&#34;http://cite.d.9rum.cc/&#34;&gt;http://cite.d.9rum.cc/&lt;/a&gt;) 접속&lt;/li&gt;
&lt;li&gt;최초 접속시 cite 권한 부여
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/cite_auth.png&#34; alt=&#34;Auth&#34; /&gt;&lt;/li&gt;
&lt;li&gt;서비스 생성
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/cite_create.png&#34; alt=&#34;Create&#34; /&gt;
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/cite_create_form.png&#34; alt=&#34;Create Form&#34; /&gt;

&lt;ul&gt;
&lt;li&gt;GitHub : github 프로젝트 위치, 브랜치&lt;/li&gt;
&lt;li&gt;Service : 서비스명. 서비스 생성시 서비스명으로 도메인 생성&lt;/li&gt;
&lt;li&gt;HTTP Ports : container의 http/https서비스 listen port. 첫번째 포트는 80으로 redirect됨&lt;/li&gt;
&lt;li&gt;Watchcenter : 빌드/배포 이벤트를 받을 watchcenter group id&lt;/li&gt;
&lt;li&gt;Replicas : container 인스턴스 개수&lt;/li&gt;
&lt;li&gt;Auto Deploy : 자동 배포 On/Off&lt;/li&gt;
&lt;li&gt;Environment Variables : 구동시 환경변수. #으로 시작하는 줄은 주석으로 무시됨&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;서비스&#34;&gt;서비스&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;GitHub Commits 목록 중 배포할 버전 옆의 Deploy버튼 클릭. 빌드되어 있지 않은 경우 Build버튼 클릭
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/cite_service.png&#34; alt=&#34;Service&#34; /&gt;&lt;/li&gt;
&lt;li&gt;buildbot에서 빌드 로그 조회 및 필요시 다시 빌드 수행
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/cite_build_1.png&#34; alt=&#34;Build&#34; /&gt;
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/cite_build_2.png&#34; alt=&#34;Build&#34; /&gt;&lt;/li&gt;
&lt;li&gt;kibana에서 배포 로그 및 런타임 로그 조회
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/cite_deploy.png&#34; alt=&#34;Deploy&#34; /&gt;&lt;/li&gt;
&lt;li&gt;배포에 성공하면 Deploy버튼이 Redeploy버튼으로 변경됨

&lt;ol&gt;
&lt;li&gt;환경변수 갱신 또는 replica 개수 변경시 재배포 목적&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;모니터링&#34;&gt;모니터링&lt;/h2&gt;

&lt;p&gt;influxDB의 clustering기능이 오픈소스 버전에서 제외됨에 따라(&lt;a href=&#34;https://influxdata.com/blog/update-on-influxdb-clustering-high-availability-and-monetization/&#34;&gt;https://influxdata.com/blog/update-on-influxdb-clustering-high-availability-and-monetization/&lt;/a&gt;) 별도의 Time Based Database도입 예정&lt;/p&gt;

&lt;!--
![Monitor](/images/usage/cite_log_metric.png)
* 로그 : ElasticSearch기반. 24시간 유지
![Log](/images/usage/cite_log.png)
* 상태 : InfluxDB기반.
![Metric](/images/usage/cite_metric.png)
--&gt;

&lt;h2 id=&#34;cli-kubectl&#34;&gt;CLI: kubectl&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;kubectl설치&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update
brew install kubernetes-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;citeui(&lt;a href=&#34;http://cite.d.9rum.cc/&#34;&gt;http://cite.d.9rum.cc/&lt;/a&gt;) 에서 프로젝트 생성&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;클러스터, 컨텍스트, 인증 토큰 설정&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl config set-cluster cite-alpha-cluster --server=http://k8s.d.9rum.cc:8080
kubectl config set-context cite-alpha-context --cluster=cite-alpha-cluster --namespace=default --user=niko-bellic
kubectl config use-context cite-alpha-context
kubectl config set-credentials niko-bellic --token=XXXXXX
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cite.d.9rum.cc/settings/profile&#34;&gt;http://cite.d.9rum.cc/settings/profile&lt;/a&gt; 참조&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;kubectl로 인스턴스 제어&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;인스턴스 개수 조절&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;kubectl scale --replicas={NUM} replicationcontrollers {replicationcontrollers name}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://tech.kakao.com/citedocs/usage/languages/go/</link>
      <pubDate>Tue, 23 Aug 2016 17:02:37 +0900</pubDate>
      
      <guid>https://tech.kakao.com/citedocs/usage/languages/go/</guid>
      <description>

&lt;h2 id=&#34;prepare&#34;&gt;Prepare&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;govendor설치&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/kardianos/govendor
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;vendor 초기화&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;govendor init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;vendor 디렉토리에 외부 라이브러리 추가&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;govendor add +external
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM golang:1.6

ENV TZ Asia/Seoul

ADD . /go/src/[리모트 패키지 경로]

WORKDIR /go/src/[리모트 패키지 경로]

RUN go-wrapper download
RUN go-wrapper install

EXPOSE [서버가 사용하는 포트]

CMD [&amp;quot;실행 파일 경로&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;예제&#34;&gt;예제&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;FROM golang:1.6

ENV TZ Asia/Seoul

ADD . /go/src/github.daumkakao.com/ctf/cite

WORKDIR /go/src/github.daumkakao.com/ctf/cite

RUN go-wrapper download
RUN go-wrapper install

EXPOSE 8080

CMD [&amp;quot;/go/bin/cite&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;dockerignore&#34;&gt;.dockerignore&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;.git
lastupdate.tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;vendoring을 통해 라이브러리 업데이트로 인한 버그나 외부 repository의 문제로 인한 빌드 실패를 최소화. govendor외에도 vendoring도구는 뭐든 사용 가능함.&lt;/li&gt;
&lt;li&gt;glide는 vendor디렉토리 내에 .git파일을 그냥 둬서 git에서 submodule로 관리할 필요가 있으나, cite에서는 vendor라이브러리를 직접 github에 호스팅하는 모델로 생각하고 govendor로 변경.&lt;/li&gt;
&lt;li&gt;golang에 한정해서 scratch 이미지 기반으로 만드는게 더 효율적이겠지만 대부분의 사용자가 OSX 또는 windows일것을 감안하면 빌드용 docker, 릴리즈용 docker를 따로 관리하기가 더 불편할것으로 예상됨.

&lt;ul&gt;
&lt;li&gt;docker in docker패턴은 향후 needs가 있으면 추가할 예정&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;govendor : &lt;a href=&#34;https://github.com/kardianos/govendor&#34;&gt;https://github.com/kardianos/govendor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;package management tools : &lt;a href=&#34;https://github.com/golang/go/wiki/PackageManagementTools&#34;&gt;https://github.com/golang/go/wiki/PackageManagementTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;golang docker guide : &lt;a href=&#34;https://blog.golang.org/docker&#34;&gt;https://blog.golang.org/docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Building Docker Images for Static Go Binaries : &lt;a href=&#34;https://medium.com/@kelseyhightower/optimizing-docker-images-for-static-binaries-b5696e26eb07#.a056g91oo&#34;&gt;https://medium.com/@kelseyhightower/optimizing-docker-images-for-static-binaries-b5696e26eb07#.a056g91oo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>https://tech.kakao.com/citedocs/usage/logging/</link>
      <pubDate>Tue, 23 Aug 2016 17:27:31 +0900</pubDate>
      
      <guid>https://tech.kakao.com/citedocs/usage/logging/</guid>
      <description>

&lt;h2 id=&#34;raw-log&#34;&gt;Raw Log&lt;/h2&gt;

&lt;p&gt;stdout/stderr를 elasticsearch에 log컬럼으로 저장
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/raw_log.png&#34; alt=&#34;RawLog&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;structured-log&#34;&gt;Structured Log&lt;/h2&gt;

&lt;p&gt;stdout/stderr중 &amp;lsquo;{&amp;lsquo;로 시작하고 JSON.parse()에 성공하는 로그는 elasticsearch에 log_obj컬럼으로 저장
&lt;img src=&#34;https://tech.kakao.com/citedocs/images/usage/structured_log.png&#34; alt=&#34;StructuredLog&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>