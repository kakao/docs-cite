<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design-rsses on Cite Documents</title>
    <link>http://tech.kakao.com/citedocs/design/index.xml</link>
    <description>Recent content in Design-rsses on Cite Documents</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the Apache License 2.0</copyright>
    <atom:link href="http://tech.kakao.com/citedocs/design/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Design</title>
      <link>http://tech.kakao.com/citedocs/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tech.kakao.com/citedocs/design/</guid>
      <description>

&lt;h2 id=&#34;create&#34;&gt;Create&lt;/h2&gt;

&lt;div id=&#39;app_create&#39; class=&#34;sequence_diagram&#34; width=&#34;100%&#34;&gt;
participant User
participant Cite
participant kubernetes
participant elasticsearch
participant Github

User-&gt;Cite: create app
Cite-&gt;kubernetes: upsert kubernetes namespace
Cite-&gt;elasticsearch: upsert kibana index
Cite-&gt;Github: upsert github webhook
Cite-&gt;Github: add cite user as collaborator
Cite-&gt;kubernetes: upsert kubernetes service
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;create new service on cite webUI&lt;/li&gt;
&lt;li&gt;create/update kubernetes namespace&lt;/li&gt;
&lt;li&gt;create/update kibana index on elasticsearch for Pod log&lt;/li&gt;
&lt;li&gt;register cite webhook on github repository&lt;/li&gt;
&lt;li&gt;add cite account as a collaborator on github repository for source checkout, commit status update, deployment create, deployment status update&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;

&lt;div id=&#39;app_build&#39; class=&#34;sequence_diagram&#34; width=&#34;100%&#34;&gt;
participant User
participant Cite
participant GitHub
participant Buildbot
participant DockerReg

User-&gt;GitHub: git push
GitHub-&gt;Cite: event: push
Cite-&gt;Buildbot: start build
Buildbot-&gt;GitHub: commit status: pending
GitHub-&gt;Cite: event: status(pending)
Cite-&gt;User: notify: build start
Buildbot-&gt;Buildbot: build docker image
Buildbot-&gt;DockerReg: push docker image
Buildbot-&gt;GitHub: commit status: success
GitHub-&gt;Cite: event: status(success)
Cite-&gt;User: notify: build finish
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;user pushes source to github&lt;/li&gt;
&lt;li&gt;github send push event to cite&lt;/li&gt;
&lt;li&gt;cite trigger buildbot to build docker image

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X-GitHub-Event: cite&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;buildbot start docker build&lt;/li&gt;
&lt;li&gt;buildbot update commit status to pending&lt;/li&gt;
&lt;li&gt;github send status/pending event to cite&lt;/li&gt;
&lt;li&gt;cite send notify : build started&lt;/li&gt;
&lt;li&gt;buildbot execute docker image build&lt;/li&gt;
&lt;li&gt;buildbot execute docker image push&lt;/li&gt;
&lt;li&gt;buildbot update commit status to success or failure&lt;/li&gt;
&lt;li&gt;github send status/success or status/failure event to cite&lt;/li&gt;
&lt;li&gt;cite send notify : build finished&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;deployment&#34;&gt;Deployment&lt;/h2&gt;

&lt;div id=&#39;app_deploy_auto&#39; class=&#34;sequence_diagram&#34; width=&#34;100%&#34;&gt;
participant User
participant Cite
participant GitHub
participant Kubernetes

GitHub-&gt;Cite: event: status(success)
Cite-&gt;GitHub: deployment
Cite-&gt;GitHub: deployment status: pending
GitHub-&gt;Cite: event: deployment(pending)
Cite-&gt;User: notify: deploy start
Cite-&gt;Kubernetes: create replication controller
Cite-&gt;Cite: wait for Pods become ready
Cite-&gt;Kubernetes: update service selector
Cite-&gt;GitHub: deployment status: success
GitHub-&gt;Cite: event: deployment(success)
Cite-&gt;User: notify: deploy success
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;github send status/success event to cite&lt;/li&gt;
&lt;li&gt;cite send create deployment to github&lt;/li&gt;
&lt;li&gt;cite send create deployment status/pending to github&lt;/li&gt;
&lt;li&gt;github send back deployment status to cite&lt;/li&gt;
&lt;li&gt;cite send notify : deploy started&lt;/li&gt;
&lt;li&gt;cite create kubernetes replication controller&lt;/li&gt;
&lt;li&gt;cite polls for all pods to become ready status&lt;/li&gt;
&lt;li&gt;cite update kubernetes service selector&lt;/li&gt;
&lt;li&gt;cite send create deployment status/success to github&lt;/li&gt;
&lt;li&gt;github send back deployment status to cite&lt;/li&gt;
&lt;li&gt;cite send notify : deploy finished&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>http://tech.kakao.com/citedocs/design/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tech.kakao.com/citedocs/design/components/</guid>
      <description>

&lt;h2 id=&#34;components&#34;&gt;Components&lt;/h2&gt;

&lt;h3 id=&#34;cite-https-github-daumkakao-com-ctf-cite&#34;&gt;&lt;a href=&#34;https://github.daumkakao.com/CTF/cite&#34;&gt;cite&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;cite web frontend 및 github의 요청을 처리하는 API 서버. google developer console에 대응&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;service metadata 설정&lt;/li&gt;
&lt;li&gt;service 생성/삭제&lt;/li&gt;
&lt;li&gt;pod 상태 조회&lt;/li&gt;
&lt;li&gt;배포/롤백&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cite-watcher-https-github-daumkakao-com-ctf-cite-watcher&#34;&gt;&lt;a href=&#34;https://github.daumkakao.com/CTF/cite-watcher&#34;&gt;cite-watcher&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;kubernetes ingress관련 이벤트 처리.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;domain update&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cite-batch-https-github-daumkakao-com-ctf-cite-batch&#34;&gt;&lt;a href=&#34;https://github.daumkakao.com/CTF/cite-batch&#34;&gt;cite-batch&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;batch성 작업 모음&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;garbage collect : 사용되지 않는 replication controller 삭제&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;external-components&#34;&gt;External Components&lt;/h2&gt;

&lt;h3 id=&#34;etcd&#34;&gt;etcd&lt;/h3&gt;

&lt;p&gt;cite의 main storage. cite configuration, kubernetes metadata, fleet metadata, cite metadata 및 loadbalancer endpoint 관리&lt;/p&gt;

&lt;h3 id=&#34;kubernetes&#34;&gt;kubernetes&lt;/h3&gt;

&lt;p&gt;container pod, replication controller, service 등 관리. replication controller가 container instance개수 유지&lt;/p&gt;

&lt;h3 id=&#34;elasticsearch-kibana&#34;&gt;elasticsearch + kibana&lt;/h3&gt;

&lt;p&gt;kubernetes POD의 로그 수집, kubernetes 및 cite 자체 로그 수집&lt;/p&gt;

&lt;h3 id=&#34;jenkins&#34;&gt;jenkins&lt;/h3&gt;

&lt;p&gt;배치 작업 처리&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;etcd backup&lt;/li&gt;
&lt;li&gt;elasticsearch cleanup : 오래된 앱 로그 및 배포 로그 삭제&lt;/li&gt;
&lt;li&gt;service health check&lt;/li&gt;
&lt;li&gt;kubernetes node lvs 상태 보고&lt;/li&gt;
&lt;li&gt;cite-batch로 사용되지 않는 replication controller삭제&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;supplement-components&#34;&gt;Supplement Components&lt;/h2&gt;

&lt;h3 id=&#34;ansible&#34;&gt;ansible&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;cite 및 kubernetes 설치, 업데이트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;docker-registry&#34;&gt;docker-registry&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker image 호스팅&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fluentd&#34;&gt;fluentd&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;pod 및 cite 로그 수집&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>